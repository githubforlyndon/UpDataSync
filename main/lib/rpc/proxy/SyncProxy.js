// **********************************************************************
// This file was generated by a TAF parser!
// TAF version 4.2.2 by TAF Team.
// Generated from `./Sync.jce'
// **********************************************************************

var TafStream = require('@taf/taf-stream');
var TafError  = require('@taf/taf-rpc').error;

if(TafStream.JceStruct == undefined){
TafStream.JceStruct = function() {
this._jce_double_precision_ = -1;
}
TafStream.JceStruct.prototype.setPrecision = function(d) {
if ((d == -1) || (d >= 0 && d <= 15)) {
this._jce_double_precision_ = d;
return true;
}
return false;
}
TafStream.JceStruct.prototype.resetPrecision = function() { this._jce_double_precision_ = -1;}
TafStream.JceStruct.prototype.hasSetPrecision = function() { return (this._jce_double_precision_ >= 0 && this._jce_double_precision_ <= 15);}
TafStream.JceStruct.prototype.getPrecision = function() { return this._jce_double_precision_; }
}

var DataSync = DataSync || {};
module.exports.DataSync = DataSync;

DataSync.DBDataSyncProxy = function () {
    this._name   = undefined;
    this._worker = undefined;
}

DataSync.DBDataSyncProxy.prototype.setTimeout = function (iTimeout) {
    this._worker.timeout = iTimeout;
}

DataSync.DBDataSyncProxy.prototype.getTimeout = function ( ) {
    return this._worker.timeout;
}


DataSync.SYNC_RET = {
    SUCC : 0,
    FAIL : -1,
    SERVER_UPKEEP : -2,
    AUTH_ERROR : -101,
    AUTH_NORIGHTS : -102,
    AUTH_SERVER_ERROR : -500
};

DataSync.SYNC_RET.etos = function(enm) {
    switch(enm){
        case -500 : return 'AUTH_SERVER_ERROR';
        case -102 : return 'AUTH_NORIGHTS';
        case -101 : return 'AUTH_ERROR';
        case -2 : return 'SERVER_UPKEEP';
        case -1 : return 'FAIL';
        case 0 : return 'SUCC';
    }
    return undefined;
};

DataSync.SYNC_RET.stoe = function(enm) {
    switch(enm){
        case 'AUTH_SERVER_ERROR' : return -500;
        case 'AUTH_NORIGHTS' : return -102;
        case 'AUTH_ERROR' : return -101;
        case 'SERVER_UPKEEP' : return -2;
        case 'FAIL' : return -1;
        case 'SUCC' : return 0;
    }
    return undefined;
};

DataSync.SYNC_RET._write = function(os, tag, val) { return os.writeInt32(tag, val); }
DataSync.SYNC_RET._read  = function(is, tag, def) { return is.readInt32(tag, true, def); }

DataSync.AccountInfo = function() {
    this.iID = 0;
    this.sAccountDesc = "";
    this.sExpireTime = "";
    this.iStatus = 0;
    this.sBusId = "";
    this.sLocalDbType = "";
    this._classname = "DataSync.AccountInfo";
};
DataSync.AccountInfo.prototype = new TafStream.JceStruct();
DataSync.AccountInfo._classname = "DataSync.AccountInfo";

DataSync.AccountInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.AccountInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.AccountInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.AccountInfo();
    tmp.iID = is.readInt32(0, false, 0);
    tmp.sAccountDesc = is.readString(1, false, "");
    tmp.sExpireTime = is.readString(2, false, "");
    tmp.iStatus = is.readInt32(3, false, 0);
    tmp.sBusId = is.readString(4, false, "");
    tmp.sLocalDbType = is.readString(5, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.AccountInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iID != undefined && this.iID != 0) {
        os.writeInt32(0, this.iID);
    }
    if (this.sAccountDesc != undefined && this.sAccountDesc != "") {
        os.writeString(1, this.sAccountDesc);
    }
    if (this.sExpireTime != undefined && this.sExpireTime != "") {
        os.writeString(2, this.sExpireTime);
    }
    if (this.iStatus != undefined && this.iStatus != 0) {
        os.writeInt32(3, this.iStatus);
    }
    if (this.sBusId != undefined && this.sBusId != "") {
        os.writeString(4, this.sBusId);
    }
    if (this.sLocalDbType != undefined && this.sLocalDbType != "") {
        os.writeString(5, this.sLocalDbType);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.AccountInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.AccountInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.AccountInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.iID = this.iID;
    tmp.sAccountDesc = this.sAccountDesc;
    tmp.sExpireTime = this.sExpireTime;
    tmp.iStatus = this.iStatus;
    tmp.sBusId = this.sBusId;
    tmp.sLocalDbType = this.sLocalDbType;
    
    return tmp;
}
DataSync.AccountInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iID") || (this.iID = json.iID);
    !json.hasOwnProperty("sAccountDesc") || (this.sAccountDesc = json.sAccountDesc);
    !json.hasOwnProperty("sExpireTime") || (this.sExpireTime = json.sExpireTime);
    !json.hasOwnProperty("iStatus") || (this.iStatus = json.iStatus);
    !json.hasOwnProperty("sBusId") || (this.sBusId = json.sBusId);
    !json.hasOwnProperty("sLocalDbType") || (this.sLocalDbType = json.sLocalDbType);
}
DataSync.AccountInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.AccountInfo.new = function () {
    return new DataSync.AccountInfo();
}
DataSync.AccountInfo.create = function (is) {
    return DataSync.AccountInfo._readFrom(is);
}
DataSync.BusInfo = function() {
    this.sBusId = "";
    this.sDbType = "";
    this.iAttachType = 0;
    this.sDesc = "";
    this.iPageSize = 0;
    this.sOtherBusConfig = "";
    this._classname = "DataSync.BusInfo";
};
DataSync.BusInfo.prototype = new TafStream.JceStruct();
DataSync.BusInfo._classname = "DataSync.BusInfo";

DataSync.BusInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.BusInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.BusInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.BusInfo();
    tmp.sBusId = is.readString(0, false, "");
    tmp.sDbType = is.readString(1, false, "");
    tmp.iAttachType = is.readInt32(2, false, 0);
    tmp.sDesc = is.readString(3, false, "");
    tmp.iPageSize = is.readInt32(4, false, 0);
    tmp.sOtherBusConfig = is.readString(5, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.BusInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sBusId != undefined && this.sBusId != "") {
        os.writeString(0, this.sBusId);
    }
    if (this.sDbType != undefined && this.sDbType != "") {
        os.writeString(1, this.sDbType);
    }
    if (this.iAttachType != undefined && this.iAttachType != 0) {
        os.writeInt32(2, this.iAttachType);
    }
    if (this.sDesc != undefined && this.sDesc != "") {
        os.writeString(3, this.sDesc);
    }
    if (this.iPageSize != undefined && this.iPageSize != 0) {
        os.writeInt32(4, this.iPageSize);
    }
    if (this.sOtherBusConfig != undefined && this.sOtherBusConfig != "") {
        os.writeString(5, this.sOtherBusConfig);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.BusInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.BusInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.BusInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sBusId = this.sBusId;
    tmp.sDbType = this.sDbType;
    tmp.iAttachType = this.iAttachType;
    tmp.sDesc = this.sDesc;
    tmp.iPageSize = this.iPageSize;
    tmp.sOtherBusConfig = this.sOtherBusConfig;
    
    return tmp;
}
DataSync.BusInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sBusId") || (this.sBusId = json.sBusId);
    !json.hasOwnProperty("sDbType") || (this.sDbType = json.sDbType);
    !json.hasOwnProperty("iAttachType") || (this.iAttachType = json.iAttachType);
    !json.hasOwnProperty("sDesc") || (this.sDesc = json.sDesc);
    !json.hasOwnProperty("iPageSize") || (this.iPageSize = json.iPageSize);
    !json.hasOwnProperty("sOtherBusConfig") || (this.sOtherBusConfig = json.sOtherBusConfig);
}
DataSync.BusInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.BusInfo.new = function () {
    return new DataSync.BusInfo();
}
DataSync.BusInfo.create = function (is) {
    return DataSync.BusInfo._readFrom(is);
}
DataSync.PluginInfo = function() {
    this.sBusId = "";
    this.sModuleName = "";
    this.sModuleContent = "";
    this._classname = "DataSync.PluginInfo";
};
DataSync.PluginInfo.prototype = new TafStream.JceStruct();
DataSync.PluginInfo._classname = "DataSync.PluginInfo";

DataSync.PluginInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.PluginInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.PluginInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.PluginInfo();
    tmp.sBusId = is.readString(0, false, "");
    tmp.sModuleName = is.readString(1, false, "");
    tmp.sModuleContent = is.readString(2, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.PluginInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sBusId != undefined && this.sBusId != "") {
        os.writeString(0, this.sBusId);
    }
    if (this.sModuleName != undefined && this.sModuleName != "") {
        os.writeString(1, this.sModuleName);
    }
    if (this.sModuleContent != undefined && this.sModuleContent != "") {
        os.writeString(2, this.sModuleContent);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.PluginInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.PluginInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.PluginInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sBusId = this.sBusId;
    tmp.sModuleName = this.sModuleName;
    tmp.sModuleContent = this.sModuleContent;
    
    return tmp;
}
DataSync.PluginInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sBusId") || (this.sBusId = json.sBusId);
    !json.hasOwnProperty("sModuleName") || (this.sModuleName = json.sModuleName);
    !json.hasOwnProperty("sModuleContent") || (this.sModuleContent = json.sModuleContent);
}
DataSync.PluginInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.PluginInfo.new = function () {
    return new DataSync.PluginInfo();
}
DataSync.PluginInfo.create = function (is) {
    return DataSync.PluginInfo._readFrom(is);
}
DataSync.ReportActiveReq = function() {
    this.sUA = "";
    this.sAccessId = "";
    this.sLastLog = "";
    this._classname = "DataSync.ReportActiveReq";
};
DataSync.ReportActiveReq.prototype = new TafStream.JceStruct();
DataSync.ReportActiveReq._classname = "DataSync.ReportActiveReq";

DataSync.ReportActiveReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.ReportActiveReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.ReportActiveReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.ReportActiveReq();
    tmp.sUA = is.readString(0, false, "");
    tmp.sAccessId = is.readString(1, false, "");
    tmp.sLastLog = is.readString(2, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.ReportActiveReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sUA != undefined && this.sUA != "") {
        os.writeString(0, this.sUA);
    }
    if (this.sAccessId != undefined && this.sAccessId != "") {
        os.writeString(1, this.sAccessId);
    }
    if (this.sLastLog != undefined && this.sLastLog != "") {
        os.writeString(2, this.sLastLog);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.ReportActiveReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.ReportActiveReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.ReportActiveReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sUA = this.sUA;
    tmp.sAccessId = this.sAccessId;
    tmp.sLastLog = this.sLastLog;
    
    return tmp;
}
DataSync.ReportActiveReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sUA") || (this.sUA = json.sUA);
    !json.hasOwnProperty("sAccessId") || (this.sAccessId = json.sAccessId);
    !json.hasOwnProperty("sLastLog") || (this.sLastLog = json.sLastLog);
}
DataSync.ReportActiveReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.ReportActiveReq.new = function () {
    return new DataSync.ReportActiveReq();
}
DataSync.ReportActiveReq.create = function (is) {
    return DataSync.ReportActiveReq._readFrom(is);
}
DataSync.ReportActiveRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.iReloadHome = 0;
    this.iRestartApp = 0;
    this.sOtherInfo = "";
    this._classname = "DataSync.ReportActiveRsp";
};
DataSync.ReportActiveRsp.prototype = new TafStream.JceStruct();
DataSync.ReportActiveRsp._classname = "DataSync.ReportActiveRsp";

DataSync.ReportActiveRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.ReportActiveRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.ReportActiveRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.ReportActiveRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp.iReloadHome = is.readInt32(2, false, 0);
    tmp.iRestartApp = is.readInt32(3, false, 0);
    tmp.sOtherInfo = is.readString(4, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.ReportActiveRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    if (this.iReloadHome != undefined && this.iReloadHome != 0) {
        os.writeInt32(2, this.iReloadHome);
    }
    if (this.iRestartApp != undefined && this.iRestartApp != 0) {
        os.writeInt32(3, this.iRestartApp);
    }
    if (this.sOtherInfo != undefined && this.sOtherInfo != "") {
        os.writeString(4, this.sOtherInfo);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.ReportActiveRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.ReportActiveRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.ReportActiveRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.iReloadHome = this.iReloadHome;
    tmp.iRestartApp = this.iRestartApp;
    tmp.sOtherInfo = this.sOtherInfo;
    
    return tmp;
}
DataSync.ReportActiveRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("iReloadHome") || (this.iReloadHome = json.iReloadHome);
    !json.hasOwnProperty("iRestartApp") || (this.iRestartApp = json.iRestartApp);
    !json.hasOwnProperty("sOtherInfo") || (this.sOtherInfo = json.sOtherInfo);
}
DataSync.ReportActiveRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.ReportActiveRsp.new = function () {
    return new DataSync.ReportActiveRsp();
}
DataSync.ReportActiveRsp.create = function (is) {
    return DataSync.ReportActiveRsp._readFrom(is);
}
DataSync.TableInfo = function() {
    this.sTableName = "";
    this.sTableCName = "";
    this.iCount = 0;
    this.iInterval = 0;
    this._classname = "DataSync.TableInfo";
};
DataSync.TableInfo.prototype = new TafStream.JceStruct();
DataSync.TableInfo._classname = "DataSync.TableInfo";

DataSync.TableInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.TableInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.TableInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.TableInfo();
    tmp.sTableName = is.readString(0, false, "");
    tmp.sTableCName = is.readString(1, false, "");
    tmp.iCount = is.readInt32(2, false, 0);
    tmp.iInterval = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.TableInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(0, this.sTableName);
    }
    if (this.sTableCName != undefined && this.sTableCName != "") {
        os.writeString(1, this.sTableCName);
    }
    if (this.iCount != undefined && this.iCount != 0) {
        os.writeInt32(2, this.iCount);
    }
    if (this.iInterval != undefined && this.iInterval != 0) {
        os.writeInt32(3, this.iInterval);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.TableInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.TableInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.TableInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sTableName = this.sTableName;
    tmp.sTableCName = this.sTableCName;
    tmp.iCount = this.iCount;
    tmp.iInterval = this.iInterval;
    
    return tmp;
}
DataSync.TableInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("sTableCName") || (this.sTableCName = json.sTableCName);
    !json.hasOwnProperty("iCount") || (this.iCount = json.iCount);
    !json.hasOwnProperty("iInterval") || (this.iInterval = json.iInterval);
}
DataSync.TableInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.TableInfo.new = function () {
    return new DataSync.TableInfo();
}
DataSync.TableInfo.create = function (is) {
    return DataSync.TableInfo._readFrom(is);
}
DataSync.TableSyncInfo = function() {
    this.sTableName = "";
    this.iTotalRows = 0;
    this._classname = "DataSync.TableSyncInfo";
};
DataSync.TableSyncInfo.prototype = new TafStream.JceStruct();
DataSync.TableSyncInfo._classname = "DataSync.TableSyncInfo";

DataSync.TableSyncInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.TableSyncInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.TableSyncInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.TableSyncInfo();
    tmp.sTableName = is.readString(0, false, "");
    tmp.iTotalRows = is.readInt32(1, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.TableSyncInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(0, this.sTableName);
    }
    if (this.iTotalRows != undefined && this.iTotalRows != 0) {
        os.writeInt32(1, this.iTotalRows);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.TableSyncInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.TableSyncInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.TableSyncInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sTableName = this.sTableName;
    tmp.iTotalRows = this.iTotalRows;
    
    return tmp;
}
DataSync.TableSyncInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("iTotalRows") || (this.iTotalRows = json.iTotalRows);
}
DataSync.TableSyncInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.TableSyncInfo.new = function () {
    return new DataSync.TableSyncInfo();
}
DataSync.TableSyncInfo.create = function (is) {
    return DataSync.TableSyncInfo._readFrom(is);
}
DataSync.SyncDataInfo = function() {
    this.sTableName = "";
    this.iRows = 0;
    this.vRowDataStr = new TafStream.List(TafStream.String);
    this._classname = "DataSync.SyncDataInfo";
};
DataSync.SyncDataInfo.prototype = new TafStream.JceStruct();
DataSync.SyncDataInfo._classname = "DataSync.SyncDataInfo";

DataSync.SyncDataInfo._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.SyncDataInfo._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.SyncDataInfo._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.SyncDataInfo();
    tmp.sTableName = is.readString(0, false, "");
    tmp.iRows = is.readInt32(1, false, 0);
    tmp.vRowDataStr = is.readList(2, false, TafStream.List(TafStream.String));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.SyncDataInfo.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(0, this.sTableName);
    }
    if (this.iRows != undefined && this.iRows != 0) {
        os.writeInt32(1, this.iRows);
    }
    if (this.vRowDataStr != undefined) {
        os.writeList(2, this.vRowDataStr);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.SyncDataInfo.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.SyncDataInfo.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.SyncDataInfo.prototype.toObject = function() { 
    var tmp = {};

    tmp.sTableName = this.sTableName;
    tmp.iRows = this.iRows;
    tmp.vRowDataStr = this.vRowDataStr.toObject();
    
    return tmp;
}
DataSync.SyncDataInfo.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("iRows") || (this.iRows = json.iRows);
    !json.hasOwnProperty("vRowDataStr") || (this.vRowDataStr.readFromObject(json.vRowDataStr));
}
DataSync.SyncDataInfo.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.SyncDataInfo.new = function () {
    return new DataSync.SyncDataInfo();
}
DataSync.SyncDataInfo.create = function (is) {
    return DataSync.SyncDataInfo._readFrom(is);
}
DataSync.LoginReq = function() {
    this.sAccessId = "";
    this.sSecret = "";
    this.sIP = "";
    this.sUA = "";
    this._classname = "DataSync.LoginReq";
};
DataSync.LoginReq.prototype = new TafStream.JceStruct();
DataSync.LoginReq._classname = "DataSync.LoginReq";

DataSync.LoginReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.LoginReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.LoginReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.LoginReq();
    tmp.sAccessId = is.readString(0, false, "");
    tmp.sSecret = is.readString(1, false, "");
    tmp.sIP = is.readString(2, false, "");
    tmp.sUA = is.readString(3, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.LoginReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sAccessId != undefined && this.sAccessId != "") {
        os.writeString(0, this.sAccessId);
    }
    if (this.sSecret != undefined && this.sSecret != "") {
        os.writeString(1, this.sSecret);
    }
    if (this.sIP != undefined && this.sIP != "") {
        os.writeString(2, this.sIP);
    }
    if (this.sUA != undefined && this.sUA != "") {
        os.writeString(3, this.sUA);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.LoginReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.LoginReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.LoginReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sAccessId = this.sAccessId;
    tmp.sSecret = this.sSecret;
    tmp.sIP = this.sIP;
    tmp.sUA = this.sUA;
    
    return tmp;
}
DataSync.LoginReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sAccessId") || (this.sAccessId = json.sAccessId);
    !json.hasOwnProperty("sSecret") || (this.sSecret = json.sSecret);
    !json.hasOwnProperty("sIP") || (this.sIP = json.sIP);
    !json.hasOwnProperty("sUA") || (this.sUA = json.sUA);
}
DataSync.LoginReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.LoginReq.new = function () {
    return new DataSync.LoginReq();
}
DataSync.LoginReq.create = function (is) {
    return DataSync.LoginReq._readFrom(is);
}
DataSync.LoginRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.sToken = "";
    this.stAccount = new DataSync.AccountInfo();
    this.stBus = new DataSync.BusInfo();
    this._classname = "DataSync.LoginRsp";
};
DataSync.LoginRsp.prototype = new TafStream.JceStruct();
DataSync.LoginRsp._classname = "DataSync.LoginRsp";

DataSync.LoginRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.LoginRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.LoginRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.LoginRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp.sToken = is.readString(2, false, "");
    tmp.stAccount = is.readStruct(3, false, DataSync.AccountInfo);
    tmp.stBus = is.readStruct(4, false, DataSync.BusInfo);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.LoginRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    if (this.sToken != undefined && this.sToken != "") {
        os.writeString(2, this.sToken);
    }
    os.writeStruct(3, this.stAccount);
    os.writeStruct(4, this.stBus);
    os.resumePrecision && os.resumePrecision();
};
DataSync.LoginRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.LoginRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.LoginRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.sToken = this.sToken;
    tmp.stAccount = this.stAccount.toObject();
    tmp.stBus = this.stBus.toObject();
    
    return tmp;
}
DataSync.LoginRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("sToken") || (this.sToken = json.sToken);
    !json.hasOwnProperty("stAccount") || (this.stAccount.readFromObject(json.stAccount));
    !json.hasOwnProperty("stBus") || (this.stBus.readFromObject(json.stBus));
}
DataSync.LoginRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.LoginRsp.new = function () {
    return new DataSync.LoginRsp();
}
DataSync.LoginRsp.create = function (is) {
    return DataSync.LoginRsp._readFrom(is);
}
DataSync.SyncTableReq = function() {
    this.sToken = "";
    this.sTableName = "";
    this.iUpdatetime = 0;
    this.iStart = 0;
    this._classname = "DataSync.SyncTableReq";
};
DataSync.SyncTableReq.prototype = new TafStream.JceStruct();
DataSync.SyncTableReq._classname = "DataSync.SyncTableReq";

DataSync.SyncTableReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.SyncTableReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.SyncTableReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.SyncTableReq();
    tmp.sToken = is.readString(0, false, "");
    tmp.sTableName = is.readString(1, false, "");
    tmp.iUpdatetime = is.readInt64(2, false, 0);
    tmp.iStart = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.SyncTableReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sToken != undefined && this.sToken != "") {
        os.writeString(0, this.sToken);
    }
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(1, this.sTableName);
    }
    if (this.iUpdatetime != undefined && this.iUpdatetime != 0) {
        os.writeInt64(2, this.iUpdatetime);
    }
    if (this.iStart != undefined && this.iStart != 0) {
        os.writeInt32(3, this.iStart);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.SyncTableReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.SyncTableReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.SyncTableReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sToken = this.sToken;
    tmp.sTableName = this.sTableName;
    tmp.iUpdatetime = this.iUpdatetime;
    tmp.iStart = this.iStart;
    
    return tmp;
}
DataSync.SyncTableReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sToken") || (this.sToken = json.sToken);
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("iUpdatetime") || (this.iUpdatetime = json.iUpdatetime);
    !json.hasOwnProperty("iStart") || (this.iStart = json.iStart);
}
DataSync.SyncTableReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.SyncTableReq.new = function () {
    return new DataSync.SyncTableReq();
}
DataSync.SyncTableReq.create = function (is) {
    return DataSync.SyncTableReq._readFrom(is);
}
DataSync.GetCreateTableSqlReq = function() {
    this.sToken = "";
    this.sTableName = "";
    this.sAccountDbUser = "";
    this.sAccountDbTablespace = "";
    this.sTargetDbType = "";
    this._classname = "DataSync.GetCreateTableSqlReq";
};
DataSync.GetCreateTableSqlReq.prototype = new TafStream.JceStruct();
DataSync.GetCreateTableSqlReq._classname = "DataSync.GetCreateTableSqlReq";

DataSync.GetCreateTableSqlReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.GetCreateTableSqlReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.GetCreateTableSqlReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.GetCreateTableSqlReq();
    tmp.sToken = is.readString(0, false, "");
    tmp.sTableName = is.readString(1, false, "");
    tmp.sAccountDbUser = is.readString(2, false, "");
    tmp.sAccountDbTablespace = is.readString(3, false, "");
    tmp.sTargetDbType = is.readString(4, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.GetCreateTableSqlReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sToken != undefined && this.sToken != "") {
        os.writeString(0, this.sToken);
    }
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(1, this.sTableName);
    }
    if (this.sAccountDbUser != undefined && this.sAccountDbUser != "") {
        os.writeString(2, this.sAccountDbUser);
    }
    if (this.sAccountDbTablespace != undefined && this.sAccountDbTablespace != "") {
        os.writeString(3, this.sAccountDbTablespace);
    }
    if (this.sTargetDbType != undefined && this.sTargetDbType != "") {
        os.writeString(4, this.sTargetDbType);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.GetCreateTableSqlReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.GetCreateTableSqlReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.GetCreateTableSqlReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sToken = this.sToken;
    tmp.sTableName = this.sTableName;
    tmp.sAccountDbUser = this.sAccountDbUser;
    tmp.sAccountDbTablespace = this.sAccountDbTablespace;
    tmp.sTargetDbType = this.sTargetDbType;
    
    return tmp;
}
DataSync.GetCreateTableSqlReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sToken") || (this.sToken = json.sToken);
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("sAccountDbUser") || (this.sAccountDbUser = json.sAccountDbUser);
    !json.hasOwnProperty("sAccountDbTablespace") || (this.sAccountDbTablespace = json.sAccountDbTablespace);
    !json.hasOwnProperty("sTargetDbType") || (this.sTargetDbType = json.sTargetDbType);
}
DataSync.GetCreateTableSqlReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.GetCreateTableSqlReq.new = function () {
    return new DataSync.GetCreateTableSqlReq();
}
DataSync.GetCreateTableSqlReq.create = function (is) {
    return DataSync.GetCreateTableSqlReq._readFrom(is);
}
DataSync.GetCreateTableSqlRsp = function() {
    this.iRet = 0;
    this.sSql = "";
    this.sMsg = "";
    this._classname = "DataSync.GetCreateTableSqlRsp";
};
DataSync.GetCreateTableSqlRsp.prototype = new TafStream.JceStruct();
DataSync.GetCreateTableSqlRsp._classname = "DataSync.GetCreateTableSqlRsp";

DataSync.GetCreateTableSqlRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.GetCreateTableSqlRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.GetCreateTableSqlRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.GetCreateTableSqlRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sSql = is.readString(1, false, "");
    tmp.sMsg = is.readString(2, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.GetCreateTableSqlRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sSql != undefined && this.sSql != "") {
        os.writeString(1, this.sSql);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(2, this.sMsg);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.GetCreateTableSqlRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.GetCreateTableSqlRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.GetCreateTableSqlRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sSql = this.sSql;
    tmp.sMsg = this.sMsg;
    
    return tmp;
}
DataSync.GetCreateTableSqlRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sSql") || (this.sSql = json.sSql);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
}
DataSync.GetCreateTableSqlRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.GetCreateTableSqlRsp.new = function () {
    return new DataSync.GetCreateTableSqlRsp();
}
DataSync.GetCreateTableSqlRsp.create = function (is) {
    return DataSync.GetCreateTableSqlRsp._readFrom(is);
}
DataSync.GetTableListRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.vTableList = new TafStream.List(DataSync.TableInfo);
    this.iHasRightsChanged = 0;
    this._classname = "DataSync.GetTableListRsp";
};
DataSync.GetTableListRsp.prototype = new TafStream.JceStruct();
DataSync.GetTableListRsp._classname = "DataSync.GetTableListRsp";

DataSync.GetTableListRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.GetTableListRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.GetTableListRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.GetTableListRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp.vTableList = is.readList(2, false, TafStream.List(DataSync.TableInfo));
    tmp.iHasRightsChanged = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.GetTableListRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    if (this.vTableList != undefined) {
        os.writeList(2, this.vTableList);
    }
    if (this.iHasRightsChanged != undefined && this.iHasRightsChanged != 0) {
        os.writeInt32(3, this.iHasRightsChanged);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.GetTableListRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.GetTableListRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.GetTableListRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.vTableList = this.vTableList.toObject();
    tmp.iHasRightsChanged = this.iHasRightsChanged;
    
    return tmp;
}
DataSync.GetTableListRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("vTableList") || (this.vTableList.readFromObject(json.vTableList));
    !json.hasOwnProperty("iHasRightsChanged") || (this.iHasRightsChanged = json.iHasRightsChanged);
}
DataSync.GetTableListRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.GetTableListRsp.new = function () {
    return new DataSync.GetTableListRsp();
}
DataSync.GetTableListRsp.create = function (is) {
    return DataSync.GetTableListRsp._readFrom(is);
}
DataSync.GetSyncBasicInfoRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.vSyncTableList = new TafStream.List(DataSync.TableSyncInfo);
    this.i = 0;
    this._classname = "DataSync.GetSyncBasicInfoRsp";
};
DataSync.GetSyncBasicInfoRsp.prototype = new TafStream.JceStruct();
DataSync.GetSyncBasicInfoRsp._classname = "DataSync.GetSyncBasicInfoRsp";

DataSync.GetSyncBasicInfoRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.GetSyncBasicInfoRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.GetSyncBasicInfoRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.GetSyncBasicInfoRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp.vSyncTableList = is.readList(2, false, TafStream.List(DataSync.TableSyncInfo));
    tmp.i = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.GetSyncBasicInfoRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    if (this.vSyncTableList != undefined) {
        os.writeList(2, this.vSyncTableList);
    }
    if (this.i != undefined && this.i != 0) {
        os.writeInt32(3, this.i);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.GetSyncBasicInfoRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.GetSyncBasicInfoRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.GetSyncBasicInfoRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.vSyncTableList = this.vSyncTableList.toObject();
    tmp.i = this.i;
    
    return tmp;
}
DataSync.GetSyncBasicInfoRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("vSyncTableList") || (this.vSyncTableList.readFromObject(json.vSyncTableList));
    !json.hasOwnProperty("i") || (this.i = json.i);
}
DataSync.GetSyncBasicInfoRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.GetSyncBasicInfoRsp.new = function () {
    return new DataSync.GetSyncBasicInfoRsp();
}
DataSync.GetSyncBasicInfoRsp.create = function (is) {
    return DataSync.GetSyncBasicInfoRsp._readFrom(is);
}
DataSync.SyncDataRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this.sTableName = "";
    this.iRspId = 0;
    this.vSyncDataList = new TafStream.List(TafStream.String);
    this._classname = "DataSync.SyncDataRsp";
};
DataSync.SyncDataRsp.prototype = new TafStream.JceStruct();
DataSync.SyncDataRsp._classname = "DataSync.SyncDataRsp";

DataSync.SyncDataRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.SyncDataRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.SyncDataRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.SyncDataRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp.sTableName = is.readString(2, false, "");
    tmp.iRspId = is.readInt32(3, false, 0);
    tmp.vSyncDataList = is.readList(4, false, TafStream.List(TafStream.String));
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.SyncDataRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(2, this.sTableName);
    }
    if (this.iRspId != undefined && this.iRspId != 0) {
        os.writeInt32(3, this.iRspId);
    }
    if (this.vSyncDataList != undefined) {
        os.writeList(4, this.vSyncDataList);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.SyncDataRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.SyncDataRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.SyncDataRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    tmp.sTableName = this.sTableName;
    tmp.iRspId = this.iRspId;
    tmp.vSyncDataList = this.vSyncDataList.toObject();
    
    return tmp;
}
DataSync.SyncDataRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("iRspId") || (this.iRspId = json.iRspId);
    !json.hasOwnProperty("vSyncDataList") || (this.vSyncDataList.readFromObject(json.vSyncDataList));
}
DataSync.SyncDataRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.SyncDataRsp.new = function () {
    return new DataSync.SyncDataRsp();
}
DataSync.SyncDataRsp.create = function (is) {
    return DataSync.SyncDataRsp._readFrom(is);
}
DataSync.ReportSyncResult = function() {
    this.iCode = 0;
    this.sErrMsg = "";
    this.sTableName = "";
    this.iRspId = 0;
    this._classname = "DataSync.ReportSyncResult";
};
DataSync.ReportSyncResult.prototype = new TafStream.JceStruct();
DataSync.ReportSyncResult._classname = "DataSync.ReportSyncResult";

DataSync.ReportSyncResult._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.ReportSyncResult._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.ReportSyncResult._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.ReportSyncResult();
    tmp.iCode = is.readInt32(0, false, 0);
    tmp.sErrMsg = is.readString(1, false, "");
    tmp.sTableName = is.readString(2, false, "");
    tmp.iRspId = is.readInt32(3, false, 0);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.ReportSyncResult.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iCode != undefined && this.iCode != 0) {
        os.writeInt32(0, this.iCode);
    }
    if (this.sErrMsg != undefined && this.sErrMsg != "") {
        os.writeString(1, this.sErrMsg);
    }
    if (this.sTableName != undefined && this.sTableName != "") {
        os.writeString(2, this.sTableName);
    }
    if (this.iRspId != undefined && this.iRspId != 0) {
        os.writeInt32(3, this.iRspId);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.ReportSyncResult.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.ReportSyncResult.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.ReportSyncResult.prototype.toObject = function() { 
    var tmp = {};

    tmp.iCode = this.iCode;
    tmp.sErrMsg = this.sErrMsg;
    tmp.sTableName = this.sTableName;
    tmp.iRspId = this.iRspId;
    
    return tmp;
}
DataSync.ReportSyncResult.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iCode") || (this.iCode = json.iCode);
    !json.hasOwnProperty("sErrMsg") || (this.sErrMsg = json.sErrMsg);
    !json.hasOwnProperty("sTableName") || (this.sTableName = json.sTableName);
    !json.hasOwnProperty("iRspId") || (this.iRspId = json.iRspId);
}
DataSync.ReportSyncResult.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.ReportSyncResult.new = function () {
    return new DataSync.ReportSyncResult();
}
DataSync.ReportSyncResult.create = function (is) {
    return DataSync.ReportSyncResult._readFrom(is);
}
DataSync.ReportFileReq = function() {
    this.sFileName = "";
    this.iReportType = 0;
    this.vContent = new TafStream.BinBuffer();
    this._classname = "DataSync.ReportFileReq";
};
DataSync.ReportFileReq.prototype = new TafStream.JceStruct();
DataSync.ReportFileReq._classname = "DataSync.ReportFileReq";

DataSync.ReportFileReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.ReportFileReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.ReportFileReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.ReportFileReq();
    tmp.sFileName = is.readString(0, false, "");
    tmp.iReportType = is.readInt32(1, false, 0);
    tmp.vContent = is.readBytes(2, false, TafStream.BinBuffer);
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.ReportFileReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sFileName != undefined && this.sFileName != "") {
        os.writeString(0, this.sFileName);
    }
    if (this.iReportType != undefined && this.iReportType != 0) {
        os.writeInt32(1, this.iReportType);
    }
    if (this.vContent != undefined) {
        os.writeBytes(2, this.vContent);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.ReportFileReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.ReportFileReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.ReportFileReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sFileName = this.sFileName;
    tmp.iReportType = this.iReportType;
    tmp.vContent = this.vContent.toObject();
    
    return tmp;
}
DataSync.ReportFileReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sFileName") || (this.sFileName = json.sFileName);
    !json.hasOwnProperty("iReportType") || (this.iReportType = json.iReportType);
    !json.hasOwnProperty("vContent") || (this.vContent.readFromObject(json.vContent));
}
DataSync.ReportFileReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.ReportFileReq.new = function () {
    return new DataSync.ReportFileReq();
}
DataSync.ReportFileReq.create = function (is) {
    return DataSync.ReportFileReq._readFrom(is);
}
DataSync.ReportLogReq = function() {
    this.sAction = "";
    this.sLog = "";
    this.sAccessId = "";
    this.sLogFileName = "";
    this._classname = "DataSync.ReportLogReq";
};
DataSync.ReportLogReq.prototype = new TafStream.JceStruct();
DataSync.ReportLogReq._classname = "DataSync.ReportLogReq";

DataSync.ReportLogReq._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.ReportLogReq._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.ReportLogReq._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.ReportLogReq();
    tmp.sAction = is.readString(1, false, "");
    tmp.sLog = is.readString(2, false, "");
    tmp.sAccessId = is.readString(3, false, "");
    tmp.sLogFileName = is.readString(4, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.ReportLogReq.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.sAction != undefined && this.sAction != "") {
        os.writeString(1, this.sAction);
    }
    if (this.sLog != undefined && this.sLog != "") {
        os.writeString(2, this.sLog);
    }
    if (this.sAccessId != undefined && this.sAccessId != "") {
        os.writeString(3, this.sAccessId);
    }
    if (this.sLogFileName != undefined && this.sLogFileName != "") {
        os.writeString(4, this.sLogFileName);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.ReportLogReq.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.ReportLogReq.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.ReportLogReq.prototype.toObject = function() { 
    var tmp = {};

    tmp.sAction = this.sAction;
    tmp.sLog = this.sLog;
    tmp.sAccessId = this.sAccessId;
    tmp.sLogFileName = this.sLogFileName;
    
    return tmp;
}
DataSync.ReportLogReq.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("sAction") || (this.sAction = json.sAction);
    !json.hasOwnProperty("sLog") || (this.sLog = json.sLog);
    !json.hasOwnProperty("sAccessId") || (this.sAccessId = json.sAccessId);
    !json.hasOwnProperty("sLogFileName") || (this.sLogFileName = json.sLogFileName);
}
DataSync.ReportLogReq.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.ReportLogReq.new = function () {
    return new DataSync.ReportLogReq();
}
DataSync.ReportLogReq.create = function (is) {
    return DataSync.ReportLogReq._readFrom(is);
}
DataSync.CommonRsp = function() {
    this.iRet = 0;
    this.sMsg = "";
    this._classname = "DataSync.CommonRsp";
};
DataSync.CommonRsp.prototype = new TafStream.JceStruct();
DataSync.CommonRsp._classname = "DataSync.CommonRsp";

DataSync.CommonRsp._write = function (os, tag, value) { os.writeStruct(tag, value); }
DataSync.CommonRsp._read  = function (is, tag, def) { return is.readStruct(tag, true, def); }
DataSync.CommonRsp._readFrom = function (is) {
    if(is.readResumePrecision == undefined){
        is.readResumePrecision = function(){
            return -1;
        }
    }
    is.saveResetPrecision && is.saveResetPrecision();
    var tmp = new DataSync.CommonRsp();
    tmp.iRet = is.readInt32(0, false, 0);
    tmp.sMsg = is.readString(1, false, "");
    tmp._jce_double_precision_ = is.readResumePrecision();
    return tmp;
};
DataSync.CommonRsp.prototype._writeTo = function (os) {
    os.savePrecision && os.savePrecision(this._jce_double_precision_);
    if (this.iRet != undefined && this.iRet != 0) {
        os.writeInt32(0, this.iRet);
    }
    if (this.sMsg != undefined && this.sMsg != "") {
        os.writeString(1, this.sMsg);
    }
    os.resumePrecision && os.resumePrecision();
};
DataSync.CommonRsp.prototype._equal = function (anItem) {
    assert(false, 'this structure not define key operation');
}
DataSync.CommonRsp.prototype._genKey = function () {
    if (!this._proto_struct_name_) {
        this._proto_struct_name_ = 'STRUCT' + Math.random();
    }
    return this._proto_struct_name_;
}
DataSync.CommonRsp.prototype.toObject = function() { 
    var tmp = {};

    tmp.iRet = this.iRet;
    tmp.sMsg = this.sMsg;
    
    return tmp;
}
DataSync.CommonRsp.prototype.readFromObject = function(json) { 
    !json.hasOwnProperty("iRet") || (this.iRet = json.iRet);
    !json.hasOwnProperty("sMsg") || (this.sMsg = json.sMsg);
}
DataSync.CommonRsp.prototype.toBinBuffer = function () {
    var os = new TafStream.JceOutputStream();
    this._writeTo(os);
    return os.getBinBuffer();
}
DataSync.CommonRsp.new = function () {
    return new DataSync.CommonRsp();
}
DataSync.CommonRsp.create = function (is) {
    return DataSync.CommonRsp._readFrom(is);
}

DataSync.DBDataSyncProxy.prototype.getCreateTableSql = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.GetCreateTableSqlRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getCreateTableSql', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.getSyncBasicInfo = function (sToken) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.GetSyncBasicInfoRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getSyncBasicInfo', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.getTableList = function (sToken) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.GetTableListRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('getTableList', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.login = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.LoginRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('login', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.reportActive = function (sToken) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.ReportActiveRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('reportActive', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.reportActiveNew = function (sToken, req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        os.writeStruct(2, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(3, true, DataSync.ReportActiveRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('reportActiveNew', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.reportFile = function (sToken, req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        os.writeStruct(2, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(3, true, DataSync.CommonRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('reportFile', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.reportLog = function (sToken, req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        os.writeStruct(2, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(3, true, DataSync.CommonRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('reportLog', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.reportSyncDataResult = function (sToken, req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeString(1, sToken);
        os.writeStruct(2, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(3, true, DataSync.SyncDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('reportSyncDataResult', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.syncData = function (req) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeStruct(1, req);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.SyncDataRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('syncData', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}

DataSync.DBDataSyncProxy.prototype.testjce = function (val1) {
    var _encode = function () { 
        var os = new TafStream.JceOutputStream();
        os.writeInt32(1, val1);
        return os.getBinBuffer();
    }

    var _decode = function (data) {
        try {
            var response = {arguments:{}};
            var is = new TafStream.JceInputStream(data.response.sBuffer);

            response.costtime = data.request.costtime;
            response.return   = is.readInt32(0, true, TafStream.Int32);
            response.arguments.rsp = is.readStruct(2, true, DataSync.CommonRsp);

            return {request:data.request, response:response};
        } catch (e) {
            var response = { };
            response.costtime      = data.request.costtime;
            response.error         = {};
            response.error.code    = TafError.CLIENT.DECODE_ERROR;
            response.error.message = e.message;

            throw { request : data.request, response : response};
        }
    }

    var _error = function(data) {
        var response = {};
        response.costtime = data.request.costtime;
        response.error    = data.error;

        throw {request:data.request, response:response};
    }

    return this._worker.taf_invoke('testjce', _encode(), arguments.length != 0?arguments[arguments.length - 1]:undefined).then(_decode, _error);
}



